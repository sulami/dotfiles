[core]
  editor = $EDITOR
[user]
  name = Robin Schroer
  email = sulami@peerwire.org
  signingkey = A1418106
[push]
  default = simple
[credential]
  helper = cache --timeout=86400
[alias]
  st = status
  sh = show
  shs = show --stat
  di = diff
  ds = diff --stat
  dh = diff HEAD --cached
  dhs = diff HEAD --cached --stat
  cl = clone
  br = branch
  co = checkout
  cob = checkout -b
  add = add --all
  aa = add --all .
  ap = add --all -p
  cm = commit
  cmm = commit -m
  ca = commit -a
  cam = commit -am
  rh = reset --hard
  rsh = reset --soft HEAD^
  pu = push --follow-tags
  poh = push origin HEAD --follow-tags
  pom = push origin master --follow-tags
  fe = fetch --all --prune
  rup = remote update
  puo = pull origin master
  ff = merge --ff
  noff = merge --no-ff
  cp = cherry-pick
  cpn = cherry-pick -n
  l = log --decorate --graph --oneline
  ll = log --decorate --graph --stat
  sm = submodule
  sts = stash save
  stl = stash list
  stsh = stash show -p
  stap = stash apply
  stpp = stash pop
  stdr = stash drop
  start = !git init && git commit --allow-empty -m \"In the beginning there was darkness\"
  cleanup = !git br --merged | sed -E 's:^\\* |  ::' | grep -v '^\\(develop\\|master\\|HEAD\\)$' | xargs git br -D
  cleanup-remote = !git br -r --merged | sed -E 's:^\\* |  ::' | sed 's:^origin/::' | grep -v '^\\(develop\\|master\\|HEAD\\)' | xargs git push origin --delete
  pmm = pull origin master:master
  rtm = !git pmm && git rebase
[commit]
  gpgsign = true
[merge]
  tool = ediff
[mergetool.ediff]
  cmd = emacs --eval \"(progn (defun ediff-write-merge-buffer () (let ((file ediff-merge-store-file)) (set-buffer ediff-buffer-C) (write-region (point-min) (point-max) file) (message \\\"Merge buffer saved in: %s\\\" file) (set-buffer-modified-p nil) (sit-for 1))) (setq ediff-quit-hook 'kill-emacs ediff-quit-merge-hook 'ediff-write-merge-buffer) (ediff-merge-files \\\"$LOCAL\\\" \\\"$REMOTE\\\" nil \\\"$MERGED\\\"))\"
[include]
  path = ~/.gitconfig.secret
[github]
  user = sulami
[gpg]
  program = gpg
[fetch]
  prune = true
[pull]
  rebase = true
[rebase]
  autoStash = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[branch]
  sort=-committerdate
[rerere]
  enabled = true
